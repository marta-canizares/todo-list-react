{"version":3,"sources":["components/TareaForm.js","components/Tarea.js","App.js","reportWebVitals.js","index.js"],"names":["TareaForm","props","useState","inputText","setInputText","validacion","setValidacion","className","onSubmit","event","preventDefault","trim","nuevaTarea","id","placeholder","value","onChange","target","Tarea","modoEdit","setModoEdit","editText","setEditText","editar","tarea","onClick","class","aria-hidden","borrar","App","listaTareas","setListaTareas","listaFiltrada","filter","e","index","actualizarTarea","listaActualizada","map","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kMAgDeA,G,KA7CG,SAACC,GAAW,IAAD,EAESC,mBAAS,IAFlB,mBAElBC,EAFkB,KAEPC,EAFO,OAGWF,oBAAS,GAHpB,mBAGlBG,EAHkB,KAGNC,EAHM,KA4BzB,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAMA,UAAU,wBAAwBC,SAhB5B,SAACC,GACjBA,EAAMC,iBACmB,KAArBP,EAAUQ,QACVV,EAAMW,WAAWT,GACjBC,EAAa,IACbE,GAAc,IAEdA,GAAc,IASd,UACA,sDACI,uBAAOC,UAAU,eAAeM,GAAG,iBAAcC,YAAY,uBAAuBC,MAAOZ,EAAWa,SAzBxF,SAACP,GACvBL,EAAaK,EAAMQ,OAAOF,UAyBlB,wBAAQR,UAAU,8BAAlB,wBAGCF,GACD,qBAAKE,UAAU,aAAf,kDCmBDW,G,MAvDD,SAACjB,GAAW,IAAD,EAEWC,oBAAS,GAFpB,mBAEdiB,EAFc,KAEJC,EAFI,OAGWlB,mBAAS,IAHpB,mBAGdmB,EAHc,KAGJC,EAHI,KAiCrB,OACI,8BAESH,EASG,uBAAMZ,UAAU,4BAA4BC,SA5BzC,SAACC,GAChBA,EAAMC,iBACNT,EAAMsB,OAAOtB,EAAMY,GAAIQ,GACvBC,EAAY,IACZF,GAAY,IAwBA,UACI,uBAAOb,UAAU,cAAcO,YAAY,iBAAiBC,MAAOM,EAAUL,SAlC/E,SAACP,GACfa,EAAYb,EAAMQ,OAAOF,UAgCb,IAC0G,wBAAQR,UAAU,8BAAlB,wBAR9G,sBAAKA,UAAU,QAAf,UACI,+BAAON,EAAMuB,QACb,sBAAMC,QAjCP,WACXL,GAAY,IAgCA,SAAuB,mBAAGM,MAAM,eAAeC,cAAY,WAC3D,sBAAMF,QAdF,WAChBxB,EAAM2B,OAAO3B,EAAMY,KAaP,SAA4B,mBAAGa,MAAM,cAAcC,cAAY,kB,eC+BpEE,MAjEf,WAAgB,IAAD,EAGyB3B,mBAAS,IAHlC,mBAGN4B,EAHM,KAGOC,EAHP,KAcPH,EAAS,SAACf,GACd,IAAMmB,EAAgBF,EAAYG,QAAO,SAACC,EAAGC,GAAJ,OAAcA,IAAUtB,KACjEkB,EAAeC,IAKXI,EAAkB,SAACvB,EAAIW,GAC3B,IAAMa,EAAmBP,EAAYQ,KAAI,SAACJ,EAAGC,GAI3C,OAHIA,IAAUtB,IACZqB,EAAIV,GAECU,KAETH,EAAeM,IAKjB,OAEE,sBAAK9B,UAAU,MAAf,UAEE,cAACgC,EAAA,EAAD,UACA,gCAAQ,0CAKR,cAAC,EAAD,CAAW3B,WArCI,SAACY,GAClBO,EAAe,CAACP,GAAF,mBAAYM,QAsCxB,qBAAKvB,UAAU,cAAf,SAEIuB,EAAYQ,KAAI,SAACd,EAAOW,GAAR,OAAkB,cAAC,EAAD,CAENX,MAAOA,EACPI,OAAQA,EACRf,GAAIsB,EACJZ,OAAQa,GAJFD,YC/C7BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6464568c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\n\r\nconst TareaForm = (props) => {\r\n\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [validacion, setValidacion] = useState(true);\r\n\r\n    \r\n    // Recoger la info del formulario\r\n    const manejarFormulario = (event) => {\r\n        setInputText(event.target.value);\r\n        //console.log(inputText)\r\n    }\r\n\r\n\r\n    // Añadir tarea \r\n    const añadirTarea = (event) => {\r\n        event.preventDefault();\r\n        if (inputText.trim() !== \"\") {\r\n            props.nuevaTarea(inputText); \r\n            setInputText(\"\")\r\n            setValidacion(true);\r\n        } else {\r\n            setValidacion(false);\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    // Formulario \r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"form form-group col-6\" onSubmit={añadirTarea}>\r\n            <label>Añadir Tarea: </label>\r\n                <input className=\"form-control\" id=\"añadirTarea\" placeholder=\"Introduzca una tarea\" value={inputText} onChange={manejarFormulario}/>\r\n                <button className=\"btn btn-success mt-3 col-12\">Añadir</button>\r\n\r\n                {\r\n                !validacion &&\r\n                <div className=\"validacion\">Añada una tarea, por favor</div>\r\n                }\r\n            </form>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default TareaForm;\r\n\r\n","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nconst Tarea = (props) => {\r\n\r\n    const [modoEdit, setModoEdit] = useState(false);\r\n    const [editText, setEditText] = useState(\"\");\r\n\r\n\r\n    // Editar una tarea existente\r\n    const editar = () => {\r\n        setModoEdit(true);\r\n    }\r\n\r\n    // manejar el editar\r\n    const manejarEdit=(event) => {\r\n        setEditText(event.target.value)\r\n    }\r\n\r\n    // hacer el submit del formulario con el editar\r\n    const submitEdit = (event) => {\r\n        event.preventDefault();\r\n        props.editar(props.id, editText)\r\n        setEditText(\"\");\r\n        setModoEdit(false);\r\n        \r\n    }\r\n\r\n\r\n    // borrar una tarea con el id\r\n    const borrarTarea = () => {\r\n        props.borrar(props.id)\r\n    }\r\n    \r\n\r\n    // pintar una tarea y editarla \r\n    return (\r\n        <div>\r\n            {\r\n                !modoEdit ?\r\n                    // pintar una tarea\r\n                <div className=\"tarea\">\r\n                    <span>{props.tarea}</span>\r\n                    <span onClick={editar}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\r\n                    <span onClick={borrarTarea}><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\r\n                </div>\r\n                    :\r\n                    // editar una tarea\r\n                    <form className=\"formEdit form-group col-6\" onSubmit={submitEdit}>\r\n                        <input className=\"input-group\" placeholder=\"Edite su tarea\" value={editText} onChange={manejarEdit}/> <button className=\"btn btn-primary mt-3 col-12\">Guardar</button>\r\n                    </form>\r\n            }\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Tarea;","import React,{useState} from 'react';\nimport TareaForm from './components/TareaForm';\nimport Tarea from './components/Tarea';\n\n// Estilos\nimport 'bootstrap/dist/css/bootstrap.min.css' \nimport {Helmet} from \"react-helmet\";\nimport './App.css';\n\n\n\nfunction App() {\n\n\n  const [listaTareas, setListaTareas] = useState([]);\n\n  // añadir nueva tarea\n  const nuevaTarea = (tarea) => {\n    setListaTareas([tarea, ...listaTareas])\n  }\n\n  // console.log del array \n // console.log(listaTareas);\n\n  // borrar una tarea\n  const borrar = (id) => {\n    const listaFiltrada = listaTareas.filter((e, index) => index !== id) \n    setListaTareas(listaFiltrada);\n  }\n\n\n  // actualizar la tarea\n  const actualizarTarea = (id, tarea) => {\n    const listaActualizada = listaTareas.map((e, index) => {\n      if (index === id) {\n        e = tarea;\n      }\n      return e;\n    })\n    setListaTareas(listaActualizada);\n  }\n\n\n\n  return (\n\n    <div className=\"App\">\n  \n      <Helmet>\n      <style>{\"body { background-color: #f5f7f1; }\"}</style>\n      </Helmet>\n      \n      \n      \n      <TareaForm nuevaTarea={nuevaTarea} />\n\n      <div className=\"listaTareas\">\n      {\n          listaTareas.map((tarea, index) => <Tarea\n                                      key= {index}\n                                      tarea={tarea}\n                                      borrar={borrar}\n                                      id={index}\n                                      editar={actualizarTarea}\n            />)\n      } \n      </div>\n      \n    </div>\n\n\n    \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}